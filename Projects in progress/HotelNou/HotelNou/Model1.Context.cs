//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HotelNou
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HotelTransilvaniaEntities : DbContext
    {
        public HotelTransilvaniaEntities()
            : base("name=HotelTransilvaniaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Angajati> Angajatis { get; set; }
        public virtual DbSet<Clienti> Clientis { get; set; }
        public virtual DbSet<Dotari> Dotaris { get; set; }
        public virtual DbSet<Dotari_Camera> Dotari_Camera { get; set; }
        public virtual DbSet<Imagini> Imaginis { get; set; }
        public virtual DbSet<Oferte> Ofertes { get; set; }
        public virtual DbSet<Pret> Prets { get; set; }
        public virtual DbSet<Rezervare> Rezervares { get; set; }
        public virtual DbSet<Rezervare_Camera> Rezervare_Camera { get; set; }
        public virtual DbSet<Servicii_Suplimentare> Servicii_Suplimentare { get; set; }
        public virtual DbSet<Serviciu_Rezervare> Serviciu_Rezervare { get; set; }
        public virtual DbSet<Tip_Camera> Tip_Camera { get; set; }
    
        public virtual ObjectResult<GetAllEmployees_Result> GetAllEmployees()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllEmployees_Result>("GetAllEmployees");
        }
    
        public virtual int AddClient(string nume, Nullable<int> nr_tel, Nullable<int> email, string username, string parola)
        {
            var numeParameter = nume != null ?
                new ObjectParameter("nume", nume) :
                new ObjectParameter("nume", typeof(string));
    
            var nr_telParameter = nr_tel.HasValue ?
                new ObjectParameter("nr_tel", nr_tel) :
                new ObjectParameter("nr_tel", typeof(int));
    
            var emailParameter = email.HasValue ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var parolaParameter = parola != null ?
                new ObjectParameter("parola", parola) :
                new ObjectParameter("parola", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddClient", numeParameter, nr_telParameter, emailParameter, usernameParameter, parolaParameter);
        }
    
        public virtual ObjectResult<GetAllCustomers_Result> GetAllCustomers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCustomers_Result>("GetAllCustomers");
        }
    
        public virtual int AddRoom(string tip, Nullable<int> nr)
        {
            var tipParameter = tip != null ?
                new ObjectParameter("tip", tip) :
                new ObjectParameter("tip", typeof(string));
    
            var nrParameter = nr.HasValue ?
                new ObjectParameter("nr", nr) :
                new ObjectParameter("nr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddRoom", tipParameter, nrParameter);
        }
    
        public virtual ObjectResult<GetRoomsWithFeatures_Result> GetRoomsWithFeatures()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRoomsWithFeatures_Result>("GetRoomsWithFeatures");
        }
    
        public virtual int UpdateRoom(Nullable<int> id, string tip, Nullable<int> nr)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var tipParameter = tip != null ?
                new ObjectParameter("tip", tip) :
                new ObjectParameter("tip", typeof(string));
    
            var nrParameter = nr.HasValue ?
                new ObjectParameter("nr", nr) :
                new ObjectParameter("nr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateRoom", idParameter, tipParameter, nrParameter);
        }
    
        public virtual int AddFeature(string denumire)
        {
            var denumireParameter = denumire != null ?
                new ObjectParameter("denumire", denumire) :
                new ObjectParameter("denumire", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddFeature", denumireParameter);
        }
    }
}
